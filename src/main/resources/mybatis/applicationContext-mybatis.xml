<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
    	http://www.springframework.org/schema/cache  
    	http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
		">

    <!-- dataSource 配置 -->  
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">  
        <!-- 基本属性 url、user、password -->  
        <property name="url" value="${jdbc.url}"/>  
        <property name="username" value="${jdbc.username}"/>  
        <property name="password" value="${jdbc.password}"/>  
  
        <!-- 配置初始化大小、最小、最大 -->  
        <property name="initialSize" value="${ds.initialSize}"/>  
        <property name="minIdle" value="${ds.minIdle}"/>  
        <property name="maxActive" value="${ds.maxActive}"/>  
  
        <!-- 配置获取连接等待超时的时间 -->  
        <property name="maxWait" value="${ds.maxWait}"/>  
  
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
        <property name="timeBetweenEvictionRunsMillis" value="${ds.timeBetweenEvictionRunsMillis}"/>  
  
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
        <property name="minEvictableIdleTimeMillis" value="${ds.minEvictableIdleTimeMillis}"/>  
  
        <property name="validationQuery" value="SELECT 'x'"/>  
        <property name="testWhileIdle" value="true"/>  
        <property name="testOnBorrow" value="false"/>  
        <property name="testOnReturn" value="false"/>  
  
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
        <property name="poolPreparedStatements" value="false"/>  
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>  
  
        <!-- 配置监控统计拦截的filters -->  
        <property name="filters" value="stat"/>  
    </bean>

	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<property name="mapperLocations"
			value="classpath:com/alfago/weixin/persistence/dao/*.xml" />
	</bean>
	
	<!--MapperScannerConfigurer配置-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--basePackage指定要扫描的包，在此包之下的映射器都会被 搜索到。可指定多个包，包与包之间用逗号或分号分隔 -->
		<property name="basePackage" value="com.abc.mapper" />
	</bean> 

    <!-- spring与mybatis整合配置，扫描所有dao -->  
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.alfago.weixin.persistence.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
  
    <!-- 对dataSource 数据源进行事务管理 -->  
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
  
    <!-- 事务管理 通知 -->  
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <!-- 对insert,update,delete 开头的方法进行事务管理,只要有异常就回滚 -->  
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>  
            <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>  
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Throwable"/>  
            <!-- select,count开头的方法,开启只读,提高数据库访问性能 -->  
            <tx:method name="select*" propagation="REQUIRED" read-only="true"/>  
            <tx:method name="count*" propagation="REQUIRED" read-only="true"/>  
            <!-- 对其他方法 使用默认的事务管理 -->  
            <tx:method name="*"/>  
        </tx:attributes>  
    </tx:advice>  
  
    <!-- 事务 aop 配置 -->  
    <aop:config>  
        <aop:pointcut id="serviceMethods" expression="execution(* com.alfago.weixin.service.*.*(..))"/>  
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods"/>  
    </aop:config>  
  
    <!-- 配置使Spring采用CGLIB代理 -->  
    <aop:aspectj-autoproxy proxy-target-class="true"/>  
  
    <!-- 启用对事务注解的支持 -->  
    <tx:annotation-driven transaction-manager="transactionManager"/>  
  
    <!-- Cache配置 -->  
    <cache:annotation-driven cache-manager="cacheManager"/>  
    <bean id="ehCacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
     		<property name="configLocation" value="classpath:config/ehcache.xml" />
	</bean>    

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">  
     		<property name="cacheManager" ref="ehCacheManagerFactory" />
	</bean> 
</beans>